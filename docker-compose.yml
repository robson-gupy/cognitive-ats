services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cognitive-ats-postgres
    environment:
      POSTGRES_DB: cognitive_ats
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cognitive-ats-network
    restart: unless-stopped

  # Backend NestJS - Companies Service
  companies-backend:
    build:
      context: ./companies-service/backend
      dockerfile: Dockerfile.dev
    container_name: cognitive-ats-companies-backend-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=cognitive_ats
      - DB_DATABASE=cognitive_ats
      - AI_SERVICE_URL=http://ai-service:8000
      - ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
    volumes:
      - ./companies-service/backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - ai-service
      - minio
      - rabbitmq
    networks:
      - cognitive-ats-network
    restart: unless-stopped

  # Frontend React - Companies Service (Desenvolvimento)
  companies-frontend:
    build:
      context: ./companies-service/frontend
      dockerfile: Dockerfile.dev
    container_name: cognitive-ats-companies-frontend-dev
    ports:
      - "8080:5173"
    volumes:
      - ./companies-service/frontend:/app
      - /app/node_modules
    depends_on:
      - companies-backend
    networks:
      - cognitive-ats-network
    restart: unless-stopped

  # AI Service (FastAPI)
  ai-service:
    build:
      context: ./ai-service
      dockerfile: Dockerfile
    container_name: cognitive-ats-ai-service
    ports:
      - "8000:8000"
    environment:
      - DEFAULT_AI_PROVIDER=openai
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
    volumes:
      - ./ai-service:/app
    networks:
      - cognitive-ats-network
    restart: unless-stopped

  # MinIO S3 Storage
  minio:
    image: minio/minio:latest
    container_name: cognitive-ats-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - cognitive-ats-network
    restart: unless-stopped

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: cognitive-ats-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - cognitive-ats-network
    restart: unless-stopped

volumes:
  postgres_data:
  minio_data:
  rabbitmq_data:

networks:
  cognitive-ats-network:
    driver: bridge 