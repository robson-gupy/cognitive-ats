#!/bin/bash

# Script de teste para o Candidates Service com Docker Compose
echo "üê≥ Testando Candidates Service com Docker Compose..."
echo ""

# Verificar se o Docker est√° rodando
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker n√£o est√° rodando. Inicie o Docker Desktop primeiro."
    exit 1
fi

echo "‚úÖ Docker est√° rodando"
echo ""

# Verificar se o docker-compose est√° dispon√≠vel
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå docker-compose n√£o est√° instalado ou n√£o est√° no PATH"
    exit 1
fi

echo "‚úÖ docker-compose est√° dispon√≠vel"
echo ""

# Navegar para o diret√≥rio raiz do projeto
cd /Users/robson/src/gupy/cognitive-ats

echo "üìÅ Diret√≥rio atual: $(pwd)"
echo ""

# Verificar se o arquivo docker-compose.yml existe
if [ ! -f "docker-compose.yml" ]; then
    echo "‚ùå docker-compose.yml n√£o encontrado"
    exit 1
fi

echo "‚úÖ docker-compose.yml encontrado"
echo ""

# Verificar se o arquivo .env existe
if [ ! -f ".env" ]; then
    echo "‚ö†Ô∏è  Arquivo .env n√£o encontrado. Copiando do env.example..."
    cp env.example .env
    echo "‚úÖ Arquivo .env criado. Edite-o com suas configura√ß√µes se necess√°rio."
    echo ""
fi

echo "‚úÖ Arquivo .env configurado"
echo ""

# Parar containers existentes
echo "üõë Parando containers existentes..."
docker-compose down
echo ""

# Construir e iniciar os servi√ßos
echo "üöÄ Construindo e iniciando os servi√ßos..."
docker-compose up -d --build

# Aguardar os servi√ßos iniciarem
echo ""
echo "‚è≥ Aguardando os servi√ßos iniciarem..."
sleep 10

# Verificar status dos containers
echo ""
echo "üìä Status dos containers:"
docker-compose ps

echo ""

# Testar o candidates-service
echo "üß™ Testando Candidates Service..."
echo ""

# Testar health check
echo "üì° Health check:"
if curl -s http://localhost:3002/health > /dev/null; then
    echo "‚úÖ Candidates Service est√° respondendo na porta 3002"
else
    echo "‚ùå Candidates Service n√£o est√° respondendo na porta 3002"
fi

echo ""

# Testar p√°gina principal
echo "üåê Testando p√°gina principal:"
if curl -s -o /dev/null -w "Status: %{http_code}\n" http://localhost:3002; then
    echo "‚úÖ P√°gina principal est√° funcionando"
else
    echo "‚ùå P√°gina principal n√£o est√° funcionando"
fi

echo ""

# Verificar logs do candidates-service
echo "üìã √öltimos logs do Candidates Service:"
docker-compose logs --tail=10 candidates-service

echo ""

# Instru√ß√µes para testar subdom√≠nios
echo "üéØ Para testar subdom√≠nios:"
echo ""
echo "1. Adicione no seu arquivo /etc/hosts:"
echo "   127.0.0.1 gupy.jobs.localhost"
echo "   127.0.0.1 empresa.jobs.localhost"
echo "   127.0.0.1 startup.jobs.localhost"
echo ""
echo "2. Acesse os subdom√≠nios:"
echo "   http://gupy.jobs.localhost"
echo "   http://empresa.jobs.localhost"
echo "   http://startup.jobs.localhost"
echo ""
echo "3. Ou acesse diretamente:"
echo "   http://localhost:3002"
echo ""
echo "4. Para ver logs em tempo real:"
echo "   docker-compose logs -f candidates-service"
echo ""
echo "5. Para parar todos os servi√ßos:"
echo "   docker-compose down"
echo ""
echo "ÔøΩÔøΩ Teste conclu√≠do!"
